каждый объект имеет ID и данные, в том числе ссылки на другие объекты (по ID)
данные могут быть быстро сериализоваться и десериализоваться
если объект подгружен, указатель на него получается из его ID, используя ассоциативный массив (черно-красное дерево)
когда один из объектов "разрешает" свою ссылку на другой объект (то есть указатель через ID превращает в указатель через указатель), объект, на который ссылаются, получает об это информацию (адрес ссылающегося объекта добавляется в односвязный список). при удалении объекта, на который ссылаются, он должен обнулить указатели во всех ссылающихся объектах. при удалении ссылающегося объекта, он должен исключить себя из односвязных списков тех объектов, на которых он ссылается

синхронизация с жестким диском:
при доступе к объектам (или их полям, пока не решил), если он не был до этого помечен, объект помечается, что его нужно сбросить на диск.
при этом его добавляют в односвязный список синхронизируемых объектов.
при каждом изменении, назависимо от того, был он помечен или нет, инкрементится глобальный счетчик
когда счетчик достигает большого числа -- объекты сбрасываются (лучше асинхронно, хотя не суть)

как разрешается ID (при запросе пользователя или ри разрешении ссылки от другого объекта):
для начала проверяем, не кончился ли лимит выделенной памяти.
если кончился -- удаляем какой-нибудь объект (ПРОРАБОТАТЬ)
далее читаем объект с диска, НЕ разрешаем в этот момент ссылок по ID, которые у него есть
добавляем его адрес в дерево

как удаляется объект:
см выше
+ чистится дерево
